<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DictionaryDataSet" targetNamespace="http://tempuri.org/DictionaryDataSet1.xsd" xmlns:mstns="http://tempuri.org/DictionaryDataSet1.xsd" xmlns="http://tempuri.org/DictionaryDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DictionaryConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DictionaryConnectionString (Settings)" PropertyReference="ApplicationSettings.Te2EnDict.Properties.Settings.GlobalReference.Default.DictionaryConnectionString" Provider="System.Data.OleDb" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DictTableAdapter" GeneratorDataComponentClassName="DictTableAdapter" Name="Dict" UserDataComponentName="DictTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DictionaryConnectionString (Settings)" DbObjectName="Dict" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `Dict` WHERE ((`pg` = ?) AND (`cd` = ?) AND ((? = 1 AND `sn` IS NULL) OR (`sn` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_pg" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="pg" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_cd" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="cd" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_sn" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="sn" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_sn" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="sn" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `Dict` (`name`, `val`, `pg`, `cd`, `sn`) VALUES (?, ?, ?, ?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="name" Precision="0" ProviderType="LongVarWChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="val" Precision="0" ProviderType="LongVarWChar" Scale="0" Size="0" SourceColumn="val" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="pg" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="pg" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="cd" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="cd" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="sn" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="sn" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT name, val, pg, cd, sn FROM Dict</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `Dict` SET `name` = ?, `val` = ?, `pg` = ?, `cd` = ?, `sn` = ? WHERE ((`pg` = ?) AND (`cd` = ?) AND ((? = 1 AND `sn` IS NULL) OR (`sn` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="name" Precision="0" ProviderType="LongVarWChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="val" Precision="0" ProviderType="LongVarWChar" Scale="0" Size="0" SourceColumn="val" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="pg" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="pg" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="cd" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="cd" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="sn" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="sn" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_pg" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="pg" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_cd" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="cd" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_sn" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="sn" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_sn" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="sn" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="val" DataSetColumn="val" />
              <Mapping SourceColumn="pg" DataSetColumn="pg" />
              <Mapping SourceColumn="cd" DataSetColumn="cd" />
              <Mapping SourceColumn="sn" DataSetColumn="sn" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="eng2teTableAdapter" GeneratorDataComponentClassName="eng2teTableAdapter" Name="eng2te" UserDataComponentName="eng2teTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DictionaryConnectionString (Settings)" DbObjectName="eng2te" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `eng2te` (`eng_word`, `pos`, `pos_type`, `meaning`) VALUES (?, ?, ?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="eng_word" Precision="0" ProviderType="LongVarWChar" Scale="0" Size="0" SourceColumn="eng_word" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="pos" Precision="0" ProviderType="LongVarWChar" Scale="0" Size="0" SourceColumn="pos" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="pos_type" Precision="0" ProviderType="LongVarWChar" Scale="0" Size="0" SourceColumn="pos_type" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="meaning" Precision="0" ProviderType="LongVarWChar" Scale="0" Size="0" SourceColumn="meaning" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT eng_word, pos, pos_type, meaning, sn FROM eng2te</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="eng_word" DataSetColumn="eng_word" />
              <Mapping SourceColumn="pos" DataSetColumn="pos" />
              <Mapping SourceColumn="pos_type" DataSetColumn="pos_type" />
              <Mapping SourceColumn="meaning" DataSetColumn="meaning" />
              <Mapping SourceColumn="sn" DataSetColumn="sn" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DictionaryDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_DataSetName="DictionaryDataSet" msprop:Generator_UserDSName="DictionaryDataSet" msprop:EnableTableAdapterManager="True">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Dict" msprop:Generator_UserTableName="Dict" msprop:Generator_RowDeletedName="DictRowDeleted" msprop:Generator_TableClassName="DictDataTable" msprop:Generator_RowChangedName="DictRowChanged" msprop:Generator_RowClassName="DictRow" msprop:Generator_RowChangingName="DictRowChanging" msprop:Generator_RowEvArgName="DictRowChangeEvent" msprop:Generator_RowEvHandlerName="DictRowChangeEventHandler" msprop:Generator_TablePropName="Dict" msprop:Generator_TableVarName="tableDict" msprop:Generator_RowDeletingName="DictRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="name" msprop:Generator_UserColumnName="name" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInTable="nameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="536870910" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="val" msprop:Generator_UserColumnName="val" msprop:Generator_ColumnPropNameInRow="val" msprop:Generator_ColumnVarNameInTable="columnval" msprop:Generator_ColumnPropNameInTable="valColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="536870910" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pg" msprop:Generator_UserColumnName="pg" msprop:Generator_ColumnPropNameInRow="pg" msprop:Generator_ColumnVarNameInTable="columnpg" msprop:Generator_ColumnPropNameInTable="pgColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="cd" msprop:Generator_UserColumnName="cd" msprop:Generator_ColumnPropNameInRow="cd" msprop:Generator_ColumnVarNameInTable="columncd" msprop:Generator_ColumnPropNameInTable="cdColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="sn" msprop:Generator_UserColumnName="sn" msprop:Generator_ColumnPropNameInRow="sn" msprop:Generator_ColumnVarNameInTable="columnsn" msprop:Generator_ColumnPropNameInTable="snColumn" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="eng2te" msprop:Generator_UserTableName="eng2te" msprop:Generator_RowDeletedName="eng2teRowDeleted" msprop:Generator_TableClassName="eng2teDataTable" msprop:Generator_RowChangedName="eng2teRowChanged" msprop:Generator_RowClassName="eng2teRow" msprop:Generator_RowChangingName="eng2teRowChanging" msprop:Generator_RowEvArgName="eng2teRowChangeEvent" msprop:Generator_RowEvHandlerName="eng2teRowChangeEventHandler" msprop:Generator_TablePropName="eng2te" msprop:Generator_TableVarName="tableeng2te" msprop:Generator_RowDeletingName="eng2teRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="eng_word" msprop:Generator_UserColumnName="eng_word" msprop:Generator_ColumnPropNameInRow="eng_word" msprop:Generator_ColumnVarNameInTable="columneng_word" msprop:Generator_ColumnPropNameInTable="eng_wordColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="536870910" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pos" msprop:Generator_UserColumnName="pos" msprop:Generator_ColumnPropNameInRow="pos" msprop:Generator_ColumnVarNameInTable="columnpos" msprop:Generator_ColumnPropNameInTable="posColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="536870910" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pos_type" msprop:Generator_UserColumnName="pos_type" msprop:Generator_ColumnPropNameInRow="pos_type" msprop:Generator_ColumnVarNameInTable="columnpos_type" msprop:Generator_ColumnPropNameInTable="pos_typeColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="536870910" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="meaning" msprop:Generator_UserColumnName="meaning" msprop:Generator_ColumnPropNameInRow="meaning" msprop:Generator_ColumnVarNameInTable="columnmeaning" msprop:Generator_ColumnPropNameInTable="meaningColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="536870910" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="sn" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="sn" msprop:Generator_ColumnPropNameInRow="sn" msprop:Generator_ColumnVarNameInTable="columnsn" msprop:Generator_ColumnPropNameInTable="snColumn" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Dict" />
      <xs:field xpath="mstns:pg" />
      <xs:field xpath="mstns:cd" />
    </xs:unique>
  </xs:element>
</xs:schema>